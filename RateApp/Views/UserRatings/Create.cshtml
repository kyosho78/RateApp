@model RateApp.Models.UserRatingViewModel

@{
    ViewBag.Title = "Create User Rating";
}

<h2>Anna suositus</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.Label("Kertakäyttöinen koodi")
        @Html.TextBox("OTP", null, new { @class = "form-control" })
        <p class="text-muted">Ole hyvä ja anna arvostelijan antama kertakäyttöinen koodi.</p>
        @Html.ValidationMessage("OTP")
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RatingValue, "Arvosana, asteikolla 1-5")
        @Html.EditorFor(model => model.RatingValue, new { htmlAttributes = new { @class = "form-control", @type = "number", min = "1", max = "5" } })
        @Html.ValidationMessageFor(model => model.RatingValue)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Comment, "Viesti, max 500 kirjainta")
        @Html.TextAreaFor(model => model.Comment, new { @class = "form-control", maxlength = "500", id = "commentText" }) <!-- Explicitly set id -->
        <small id="charCount">0/500</small>
        @Html.ValidationMessageFor(model => model.Comment)
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var commentTextArea = document.getElementById('commentText'); // Target element with id 'commentText'
            var charCountDisplay = document.getElementById('charCount');
            commentTextArea.addEventListener('input', function () {
                var maxLength = 500;
                var currentLength = this.value.length;
                charCountDisplay.innerText = currentLength + "/" + maxLength;
            });
        });
    </script>
    <button type="submit" class="btn btn-outline-dark">Lähetä</button>
}

